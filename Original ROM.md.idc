//
// +-------------------------------------------------------------------------+
// |      This file was generated by The Interactive Disassembler (IDA)      |
// |           Copyright (c) 2018 Hex-Rays, <support@hex-rays.com>           |
// |                      License info: 48-3015-72F4-DD                      |
// |                       Octavian Dima, personal use                       |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void)
{
  // set 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, INFFL_LOADIDC|get_inf_attr(INF_GENFLAGS));
  GenInfo();            // various settings
  Segments();           // segmentation
  Enums();              // enumerations
  Structures();         // structure types
  ApplyStrucTInfos();   // structure type infos
  Patches();            // manual patches
  SegRegs();            // segment register values
  Bytes();              // individual bytes (code,data)
  Functions();          // function definitions
  // clear 'loading idc file' mode
  set_inf_attr(INF_GENFLAGS, ~INFFL_LOADIDC&get_inf_attr(INF_GENFLAGS));
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        delete_all_segments();    // purge database
	set_processor_type("68000", SETPROC_USER);
	set_inf_attr(INF_COMPILER, 0);
	set_inf_attr(INF_STRLIT_BREAK, 0xA);
	set_flag(INF_CMTFLAG, SW_ALLCMT, 0);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_VOID, 0);
	set_inf_attr(INF_XREFNUM, 2);
	set_flag(INF_OUTFLAGS, OFLG_SHOW_AUTO, 1);
	set_inf_attr(INF_INDENT, 16);
	set_inf_attr(INF_COMMENT, 40);
	set_inf_attr(INF_MAXREF, 0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	set_selector(0X1,0);
	;
	add_segm_ex(0,0X80000,0,1,1,5,ADDSEG_NOSREG);
	SegRename(0,"ROM");
	SegClass (0,"CODE");
	set_segm_type(0,2);
	set_inf_attr(INF_LOW_OFF, 0xFFFFFFFFFFFFFFFF);
	set_inf_attr(INF_HIGH_OFF, 0x80000);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
        begin_type_updating(UTP_ENUM);
        end_type_updating(UTP_ENUM);
}

//------------------------------------------------------------------------
// Information about type information for structure members

static ApplyStrucTInfos() {
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
        begin_type_updating(UTP_STRUCT);
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	update_extra_cmt		(0,	E_PREV + 0,	"; File Name   : C:\\Users\\theis\\Desktop\\Projects\\Sonic 1 Prototype Disassembly\\Original ROM.md");
	update_extra_cmt		(0,	E_PREV + 1,	"; Format      : Binary file");
	update_extra_cmt		(0,	E_PREV + 2,	"; Base Address: 0000h Range: 0000h - 80000h Loaded length: 80000h");
	create_dword	(x=0);
	make_array	(x,	0X40);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0,	"StartofROM");
	create_strlit	(0X100,	0X10);
	set_name	(0X100,	"Console");
	create_strlit	(0X110,	0X10);
	set_name	(0X110,	"Copyright");
	create_strlit	(0X120,	0X30);
	create_strlit	(0X150,	0X30);
	set_name	(0X150,	"InternationalTitle");
	create_strlit	(0X180,	0XE);
	set_name	(0X180,	"ProductID");
	create_word	(0X18E);
	create_strlit	(0X190,	0X10);
	set_name	(0X190,	"IOSupport");
	create_dword	(x=0X1A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X1A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X1A8);
	create_dword	(0X1AC);
	create_dword	(0X1B0);
	create_dword	(0X1B4);
	create_dword	(0X1B8);
	create_strlit	(0X1BC,	0X34);
	set_name	(0X1BC,	"HeaderMisc");
	create_strlit	(0X1F0,	0X10);
	set_name	(0X1F0,	"RegionSupport");
	create_insn	(0X200);
	set_name	(0X200,	"ExceptionLoop");
	create_insn	(0X206);
	set_name	(0X206,	"ProgramStart");
	create_insn	(x=0X218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X2A2,	"InitialSysValues");
	create_byte	(0X2BF);
	set_cmt	(0X2C2,	"VDP Initialisation Values",	0);
	create_byte	(0X2C2);
	make_array	(0X2C2,	0X4);
	create_byte	(0X2C6);
	make_array	(0X2C6,	0X4);
	create_byte	(0X2CA);
	make_array	(0X2CA,	0X4);
	create_byte	(0X2CE);
	make_array	(0X2CE,	0X4);
	create_byte	(0X2D2);
	make_array	(0X2D2,	0X4);
	create_byte	(0X2D6);
	make_array	(0X2D6,	0X4);
	set_cmt	(0X2DA,	"Z80 Code",	0);
	create_byte	(0X2DA);
	make_array	(0X2DA,	0X28);
	create_byte	(0X302);
	make_array	(0X302,	0X4);
	create_insn	(0X306);
	create_insn	(x=0X33E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X36A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X38E,	"GameLoop");
	create_insn	(0X39C);
	set_name	(0X39C,	"GameModeArray");
	create_insn	(0X3A0);
	create_insn	(0X3A4);
	create_insn	(0X3A8);
	create_insn	(0X3AC);
	create_insn	(0X3B0);
	create_insn	(0X3B2);
	set_name	(0X3C2,	"ChecksumFillPal");
	set_name	(0X3CE,	"ChecksumLoop");
	create_insn	(0X3D0);
	set_name	(0X3D0,	"BusError");
	create_insn	(0X3D8);
	set_name	(0X3D8,	"AddressError");
	create_insn	(0X3E0);
	set_name	(0X3E0,	"IllegalInstruction");
	create_insn	(0X3EC);
	set_name	(0X3EC,	"DividebyZero");
	create_insn	(0X3F4);
	set_name	(0X3F4,	"CHKException");
	create_insn	(0X3FC);
	set_name	(0X3FC,	"TRAPVException");
	create_insn	(0X404);
	set_name	(0X404,	"PrivilegeViolation");
	create_insn	(0X40C);
	set_name	(0X40C,	"TRACEException");
	create_insn	(0X414);
	set_name	(0X414,	"LineAEmulation");
	create_insn	(0X420);
	set_name	(0X420,	"LineFEmulation");
	create_insn	(0X42C);
	set_name	(0X42C,	"ErrorException");
	create_insn	(0X434);
	create_insn	(0X45C);
	create_insn	(x=0X482);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X482,	"ShowErrorMessage");
	create_insn	(x=0X492);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X4CC);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	set_name	(0X4CC,	"ErrorText");
	create_word	(x=0X4CE);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4D0);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4D2);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4D4);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4D6);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4D8);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4DA);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4DC);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4DE);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_word	(x=0X4E0);
	op_plain_offset	(x,	0,	0X4CC);
	op_plain_offset	(x,	128,	0X4CC);
	create_strlit	(0X4E2,	0X13);
	set_name	(0X4E2,	"ASCII_ErrorExcept");
	create_strlit	(0X4F5,	0X13);
	set_name	(0X4F5,	"ASCII_BusError");
	create_strlit	(0X508,	0X13);
	set_name	(0X508,	"ASCII_AddressError");
	create_strlit	(0X51B,	0X13);
	set_name	(0X51B,	"ASCII_IllegalInstruction");
	create_strlit	(0X52E,	0X13);
	set_name	(0X52E,	"ASCII_ZeroDivide");
	create_strlit	(0X541,	0X13);
	set_name	(0X541,	"ASCII_CHKInstruction");
	create_strlit	(0X554,	0X13);
	set_name	(0X554,	"ASCII_TRAPVInstruction");
	create_strlit	(0X567,	0X13);
	set_name	(0X567,	"ASCII_PrivViolation");
	create_strlit	(0X57A,	0X13);
	set_name	(0X57A,	"ASCII_TRACEException");
	create_strlit	(0X58D,	0X13);
	set_name	(0X58D,	"ASCII_LineAEmulator");
	create_strlit	(0X5A0,	0X13);
	set_name	(0X5A0,	"ASCII_LineFEmulator");
	create_insn	(0X5B4);
	create_insn	(0X5C4);
	create_insn	(0X5DA);
	set_name	(0X5DA,	"ErrorPressC");
	create_insn	(0XB0A);
	set_name	(0XB0A,	"VBlank");
	create_insn	(0XF04);
	set_name	(0XF04,	"HBlank");
	create_insn	(x=0XF0C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF80);
	create_insn	(0XFB0);
	set_name	(0XFB0,	"ControllRead");
	create_insn	(x=0XFC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFC6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFDC);
	create_insn	(x=0X100A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1010);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1016);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X104E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1082);
	create_insn	(x=0X10A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1112);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1122);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1134);
	create_insn	(x=0X1146);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X114C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X115E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11A4);
	set_name	(0X11A4,	"PlaySound");
	create_insn	(0X11AA);
	set_name	(0X11AA,	"PlaySound_Special");
	create_insn	(0X11B0);
	create_insn	(0X11B6);
	set_name	(0X11B6,	"Pause");
	create_insn	(0X11EE);
	create_insn	(0X120E);
	create_insn	(x=0X1216);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1236);
	set_name	(0X1236,	"NemesisDecompress");
	create_insn	(x=0X123A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1240);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1248);
	create_insn	(x=0X124C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1252);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1280);
	set_name	(0X1280,	"NemesisDecompress2");
	create_insn	(0X12C2);
	set_name	(0X12C2,	"NemesisDecompress3");
	create_insn	(0X12CC);
	create_insn	(0X12F8);
	create_insn	(0X1302);
	create_insn	(0X130E);
	create_insn	(0X1318);
	create_insn	(0X1324);
	create_insn	(0X132E);
	create_insn	(0X135E);
	create_insn	(0X1376);
	set_name	(0X1376,	"LoadPLCs");
	create_insn	(x=0X137A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X138A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1396);
	create_insn	(0X13A8);
	create_insn	(x=0X13AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X13BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X13D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X13E2);
	create_insn	(x=0X13F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X13F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X14E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1514);
	create_insn	(0X1682);
	create_insn	(0X1692);
	create_insn	(x=0X1694);
	op_stkvar	(x,	1);
	create_insn	(x=0X16A6);
	op_stkvar	(x,	1);
	create_insn	(0X16B8);
	create_insn	(x=0X16C2);
	op_stkvar	(x,	1);
	create_insn	(x=0X16D6);
	op_stkvar	(x,	1);
	create_insn	(x=0X16E8);
	op_stkvar	(x,	1);
	create_insn	(0X16FC);
	create_insn	(0X171E);
	create_insn	(0X172E);
	create_insn	(0X1732);
	create_insn	(x=0X1752);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1760);
	create_insn	(x=0X177A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1950);
	create_insn	(x=0X1958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1988);
	create_insn	(x=0X198A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X198E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X19A6);
	create_insn	(0X19BC);
	create_insn	(0X19CA);
	create_insn	(0X19CE);
	create_insn	(0X19D2);
	create_insn	(0X19F2);
	create_insn	(x=0X19F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1A0A);
	create_insn	(0X1A1A);
	create_insn	(0X1A28);
	create_insn	(0X1A36);
	create_insn	(0X1A3A);
	create_insn	(x=0X1A50);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1A56);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1AA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1AC4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X201C);
	create_insn	(0X204E);
	create_insn	(0X231C);
	create_insn	(0X2350);
	create_insn	(0X2378);
	create_insn	(0X2484);
	set_name	(0X2484,	"SEGAScreen");
	create_insn	(x=0X2494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X24CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X24D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X24DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X24E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X254C);
	set_name	(0X254C,	"TitleScreen");
	create_insn	(x=0X2554);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2588);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X25A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X25B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X25C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X25C6);
	op_plain_offset	(x,	1,	0XC00000);
	op_plain_offset	(x,	129,	0XC00000);
	create_insn	(x=0X25CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X25DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2616);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2620);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2626);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2634);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X263A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2648);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X264E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X26E4);
	create_insn	(x=0X2706);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X271E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X2780);
	create_insn	(0X2796);
	create_insn	(0X27F8);
	create_insn	(0X282C);
	create_insn	(0X28A6);
	create_insn	(0X28F0);
	create_insn	(x=0X292C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2932);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X296A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X29B8);
	create_insn	(0X29CC);
	create_insn	(0X29DE);
	create_insn	(0X2BCE);
	set_name	(0X2BCE,	"LevelMode");
	create_insn	(x=0X2BE0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2BF6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2C18);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2C42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2C52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2C62);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2C7E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2CE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2CF2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2D02);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2D12);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2D22);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2D32);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X2DB2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X2E66);
	create_insn	(0X2E84);
	create_insn	(0X3048);
	create_insn	(0X3078);
	create_insn	(0X30B8);
	create_insn	(x=0X30C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X30DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X31EE);
	create_insn	(x=0X3204);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3208);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X321A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X321E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3300);
	set_name	(0X3300,	"nullsub_1");
	create_insn	(x=0X3360);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3364);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X33B6);
	create_insn	(x=0X33BE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X33C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X33EC);
	create_insn	(0X344E);
	create_insn	(0X34BC);
	create_insn	(0X34FA);
	create_insn	(0X34FC);
	set_name	(0X34FC,	"SpecialStage");
	create_insn	(x=0X3512);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X354A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X355A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X356A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X357A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X35EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3662);
	create_insn	(x=0X366A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3670);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3684);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X36AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X36F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X36F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3706);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X371A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3730);
	create_insn	(x=0X373C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3750);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X376C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X37A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X37AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X37B6);
	create_insn	(x=0X37C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X37D8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X37EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X37F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X39B2);
	create_insn	(x=0X39E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X39EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A10);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A14);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3A1C);
	create_insn	(x=0X3A26);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A2A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A42);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A46);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X3A4C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3AAE);
	create_insn	(0X3C6E);
	create_insn	(0X3D54);
	create_insn	(x=0X3D60);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X3D9A);
	create_insn	(0X3DF6);
	create_insn	(0X40B4);
	create_insn	(0X40E0);
	create_insn	(0X40E8);
	create_insn	(0X4102);
	create_insn	(0X412C);
	create_insn	(0X414C);
	create_insn	(0X4180);
	create_insn	(0X4192);
	create_insn	(0X41AC);
	create_insn	(0X41BE);
	create_insn	(0X41D0);
	create_insn	(0X41E8);
	create_insn	(0X4200);
	create_insn	(0X4250);
	create_insn	(0X4258);
	create_insn	(0X4276);
	create_insn	(0X460A);
	create_insn	(0X4662);
	create_insn	(0X467E);
	create_insn	(0X469E);
	create_insn	(0X46C0);
	create_insn	(x=0X4706);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X4752);
	create_insn	(x=0X478A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X4790);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X4796);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X479A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X47A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X47A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X47B0);
	create_insn	(0X480A);
	create_insn	(x=0X4812);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X4822);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X4832);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X48BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X48CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X48D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X48DA);
	create_insn	(x=0X48EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X4914);
	create_insn	(0X4B82);
	set_name	(0X4B82,	"Obj02");
	create_word	(x=0X4B90);
	op_plain_offset	(x,	0,	0X4B90);
	op_plain_offset	(x,	128,	0X4B90);
	set_name	(0X4B90,	"Obj02_Index");
	create_word	(x=0X4B92);
	op_plain_offset	(x,	0,	0X4B90);
	op_plain_offset	(x,	128,	0X4B90);
	create_word	(x=0X4B94);
	op_plain_offset	(x,	0,	0X4B90);
	op_plain_offset	(x,	128,	0X4B90);
	create_word	(x=0X4B96);
	op_plain_offset	(x,	0,	0X4B90);
	op_plain_offset	(x,	128,	0X4B90);
	create_insn	(0X4B98);
	set_name	(0X4B98,	"Obj02_Init");
	create_insn	(x=0X4BA8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X4BEA,	"Obj02_Return");
	create_insn	(0X4BEC);
	set_name	(0X4BEC,	"Obj02_Delete");
	create_word	(x=0X4BF2);
	op_plain_offset	(x,	0,	0X4BF2);
	op_plain_offset	(x,	128,	0X4BF2);
	set_name	(0X4BF2,	"Map_Obj02");
	create_word	(x=0X4BF4);
	op_plain_offset	(x,	0,	0X4BF2);
	op_plain_offset	(x,	128,	0X4BF2);
	create_word	(x=0X4BF6);
	op_plain_offset	(x,	0,	0X4BF2);
	op_plain_offset	(x,	128,	0X4BF2);
	create_word	(x=0X4BF8);
	op_plain_offset	(x,	0,	0X4BF2);
	op_plain_offset	(x,	128,	0X4BF2);
	create_byte	(0X4BFB);
	make_array	(0X4BFB,	0X5);
	create_byte	(0X4C01);
	make_array	(0X4C01,	0X5);
	create_byte	(0X4C07);
	make_array	(0X4C07,	0X29);
	create_byte	(0X4C31);
	make_array	(0X4C31,	0X29);
	create_insn	(0X4C5A);
	set_name	(0X4C5A,	"Obj03");
	create_word	(x=0X4C68);
	op_plain_offset	(x,	0,	0X4C68);
	op_plain_offset	(x,	128,	0X4C68);
	set_name	(0X4C68,	"Obj03_Index");
	create_word	(x=0X4C6A);
	op_plain_offset	(x,	0,	0X4C68);
	op_plain_offset	(x,	128,	0X4C68);
	create_word	(x=0X4C6C);
	op_plain_offset	(x,	0,	0X4C68);
	op_plain_offset	(x,	128,	0X4C68);
	create_word	(x=0X4C6E);
	op_plain_offset	(x,	0,	0X4C68);
	op_plain_offset	(x,	128,	0X4C68);
	create_insn	(0X4C70);
	set_name	(0X4C70,	"Obj03_Init");
	create_insn	(x=0X4C80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X4CB6,	"Obj03_Return");
	create_insn	(0X4CB8);
	set_name	(0X4CB8,	"Obj03_Delete");
	set_name	(0X4E56,	"ObjGHZBridge");
	create_insn	(0X4FD4);
	set_name	(0X545E,	"Map_Bridge");
	create_insn	(x=0X560E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X5626);
	set_name	(0X577A,	"ObjGHZHelix");
	set_name	(0X590A,	"ObjPlatform");
	create_insn	(0X5C80);
	set_name	(0X5C80,	"ObjRollingBall");
	create_word	(x=0X5C8E);
	op_plain_offset	(x,	0,	0X5C8E);
	op_plain_offset	(x,	128,	0X5C8E);
	set_name	(0X5C8E,	"ObjRollingBall_Index");
	create_word	(x=0X5C90);
	op_plain_offset	(x,	0,	0X5C8E);
	op_plain_offset	(x,	128,	0X5C8E);
	create_word	(x=0X5C92);
	op_plain_offset	(x,	0,	0X5C8E);
	op_plain_offset	(x,	128,	0X5C8E);
	create_word	(x=0X5C94);
	op_plain_offset	(x,	0,	0X5C8E);
	op_plain_offset	(x,	128,	0X5C8E);
	create_word	(x=0X5C96);
	op_plain_offset	(x,	0,	0X5C8E);
	op_plain_offset	(x,	128,	0X5C8E);
	create_insn	(0X5C98);
	set_name	(0X5C98,	"ObjRollingBall_Init");
	create_insn	(x=0X5CC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X5CEC,	"ObjRollingBall_Return");
	create_insn	(0X5CEE);
	create_insn	(0X5D2C);
	create_insn	(0X5D86);
	create_insn	(0X5DBE);
	create_insn	(0X5DC8);
	create_insn	(0X5DD6);
	create_insn	(0X5E0A);
	create_insn	(0X5E2A);
	create_insn	(0X5E4A);
	set_name	(0X5E4A,	"ObjRollingBall_Delete");
	create_insn	(0X5E50);
	set_name	(0X5E7A,	"Map_RollingBall");
	set_name	(0X5EE0,	"ObjGHZCliff");
	create_insn	(0X6626);
	create_word	(x=0X6634);
	op_plain_offset	(x,	0,	0X6634);
	op_plain_offset	(x,	128,	0X6634);
	create_word	(x=0X6636);
	op_plain_offset	(x,	0,	0X6634);
	op_plain_offset	(x,	128,	0X6634);
	create_word	(x=0X6638);
	op_plain_offset	(x,	0,	0X6634);
	op_plain_offset	(x,	128,	0X6634);
	create_word	(x=0X663A);
	op_plain_offset	(x,	0,	0X6634);
	op_plain_offset	(x,	128,	0X6634);
	create_word	(x=0X663C);
	op_plain_offset	(x,	0,	0X6634);
	op_plain_offset	(x,	128,	0X6634);
	create_insn	(0X670A);
	set_name	(0X670A,	"ObjScenery");
	create_word	(x=0X6718);
	op_plain_offset	(x,	0,	0X6718);
	op_plain_offset	(x,	128,	0X6718);
	set_name	(0X6718,	"ObjScenery_Index");
	create_word	(x=0X671A);
	op_plain_offset	(x,	0,	0X6718);
	op_plain_offset	(x,	128,	0X6718);
	create_word	(x=0X671C);
	op_plain_offset	(x,	0,	0X6718);
	op_plain_offset	(x,	128,	0X6718);
	create_word	(x=0X671E);
	op_plain_offset	(x,	0,	0X6718);
	op_plain_offset	(x,	128,	0X6718);
	create_insn	(0X6720);
	set_name	(0X6720,	"ObjScenery_Init");
	set_name	(0X6750,	"ObjScenery_ChkDelete");
	create_insn	(0X6774);
	set_name	(0X6774,	"ObjScenery_Delete");
	create_dword	(x=0X677A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X677A,	"SceneryTypes");
	create_word	(0X677E);
	create_byte	(0X6780);
	make_array	(0X6780,	0X4);
	create_dword	(x=0X6784);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X6788);
	create_byte	(0X678A);
	make_array	(0X678A,	0X4);
	create_dword	(x=0X678E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X6792);
	create_byte	(0X6794);
	make_array	(0X6794,	0X4);
	create_dword	(x=0X6798);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X679C);
	create_byte	(0X679E);
	make_array	(0X679E,	0X4);
	create_word	(x=0X67A2);
	op_plain_offset	(x,	0,	0X67A2);
	op_plain_offset	(x,	128,	0X67A2);
	set_name	(0X67A2,	"Map_Scenery");
	create_byte	(0X67A5);
	make_array	(0X67A5,	0X15);
	create_insn	(0X67BA);
	set_name	(0X67BA,	"ObjUnkSwitch");
	create_word	(x=0X67C8);
	op_plain_offset	(x,	0,	0X67C8);
	op_plain_offset	(x,	128,	0X67C8);
	set_name	(0X67C8,	"ObjUnkSwitch_Index");
	create_word	(x=0X67CA);
	op_plain_offset	(x,	0,	0X67C8);
	op_plain_offset	(x,	128,	0X67C8);
	create_word	(x=0X67CC);
	op_plain_offset	(x,	0,	0X67C8);
	op_plain_offset	(x,	128,	0X67C8);
	create_insn	(0X67CE);
	set_name	(0X67CE,	"ObjUnkSwitch_Init");
	create_insn	(x=0X67D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X67F8,	"ObjUnkSwitch_Action");
	set_name	(0X6812,	"ObjUnkSwitch_ChkDelete");
	create_insn	(0X6836);
	set_name	(0X6836,	"ObjUnkSwitch_Delete");
	create_insn	(0X683C);
	set_name	(0X683C,	"ObjUnkSwitch_ChkTouch");
	create_insn	(x=0X6840);
	op_plain_offset	(x,	0,	0XFFD000);
	op_plain_offset	(x,	128,	0XFFD000);
	create_insn	(0X6874);
	create_word	(x=0X6878);
	op_plain_offset	(x,	0,	0X6878);
	op_plain_offset	(x,	128,	0X6878);
	set_name	(0X6878,	"Map_UnkSwitch");
	create_byte	(0X687B);
	make_array	(0X687B,	0X15);
	create_insn	(0X6890);
	create_word	(x=0X689E);
	op_plain_offset	(x,	0,	0X689E);
	op_plain_offset	(x,	128,	0X689E);
	create_word	(x=0X68A0);
	op_plain_offset	(x,	0,	0X689E);
	op_plain_offset	(x,	128,	0X689E);
	create_word	(x=0X68A2);
	op_plain_offset	(x,	0,	0X689E);
	op_plain_offset	(x,	128,	0X689E);
	create_insn	(0X68A4);
	create_insn	(x=0X68A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X6936);
	create_insn	(0X6960);
	create_insn	(0X698C);
	create_insn	(0X69A8);
	create_insn	(0X69C0);
	create_insn	(0X69CE);
	create_insn	(x=0X69D2);
	op_plain_offset	(x,	0,	0XFFD000);
	op_plain_offset	(x,	128,	0XFFD000);
	create_insn	(0X6A24);
	create_insn	(0X6A28);
	create_word	(x=0X6A2C);
	op_plain_offset	(x,	0,	0X6A2C);
	op_plain_offset	(x,	128,	0X6A2C);
	create_word	(x=0X6A2E);
	op_plain_offset	(x,	0,	0X6A2C);
	op_plain_offset	(x,	128,	0X6A2C);
	create_byte	(0X6A31);
	make_array	(0X6A31,	0X14);
	create_byte	(0X6A46);
	make_array	(0X6A46,	0X10);
	create_insn	(0X6A56);
	set_name	(0X6A56,	"ObjTitleSonic");
	create_insn	(x=0X6A5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X6A64);
	op_plain_offset	(x,	0,	0X6A64);
	op_plain_offset	(x,	128,	0X6A64);
	set_name	(0X6A64,	"ObjTitleSonic_Index");
	create_word	(x=0X6A66);
	op_plain_offset	(x,	0,	0X6A64);
	op_plain_offset	(x,	128,	0X6A64);
	create_word	(x=0X6A68);
	op_plain_offset	(x,	0,	0X6A64);
	op_plain_offset	(x,	128,	0X6A64);
	create_word	(x=0X6A6A);
	op_plain_offset	(x,	0,	0X6A64);
	op_plain_offset	(x,	128,	0X6A64);
	create_insn	(0X6A6C);
	set_name	(0X6A6C,	"ObjTitleSonic_Init");
	create_insn	(x=0X6A7C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X6A96);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X6AA0,	"ObjTitleSonic_Wait");
	create_insn	(0X6AAE);
	set_name	(0X6AAE,	"ObjTitleSonic_Return");
	create_insn	(0X6AB0);
	set_name	(0X6AB0,	"ObjTitleSonic_Move");
	set_name	(0X6AC0,	"ObjTitleSonic_Display");
	create_insn	(0X6AC4);
	create_insn	(x=0X6AC6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X6AC6,	"ObjTitleSonic_Animate");
	create_insn	(0X6AD4);
	create_insn	(0X6AD6);
	set_name	(0X6AD6,	"ObjPSB");
	create_word	(x=0X6AE8);
	op_plain_offset	(x,	0,	0X6AE8);
	op_plain_offset	(x,	128,	0X6AE8);
	set_name	(0X6AE8,	"ObjPSB_Index");
	create_word	(x=0X6AEA);
	op_plain_offset	(x,	0,	0X6AE8);
	op_plain_offset	(x,	128,	0X6AE8);
	create_word	(x=0X6AEC);
	op_plain_offset	(x,	0,	0X6AE8);
	op_plain_offset	(x,	128,	0X6AE8);
	create_insn	(0X6AEE);
	set_name	(0X6AEE,	"ObjPSB_Init");
	create_insn	(x=0X6AFE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X6B18,	"ObjPSB_Return");
	create_insn	(x=0X6B1A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X6B1A,	"ObjPSB_Animate");
	create_word	(x=0X6B24);
	op_plain_offset	(x,	0,	0X6B24);
	op_plain_offset	(x,	128,	0X6B24);
	set_name	(0X6B24,	"Anim_TitleSonic");
	create_byte	(0X6B26);
	make_array	(0X6B26,	0XC);
	create_word	(x=0X6B32);
	op_plain_offset	(x,	0,	0X6B32);
	op_plain_offset	(x,	128,	0X6B32);
	set_name	(0X6B32,	"Anim_PSB");
	create_byte	(0X6B34);
	make_array	(0X6B34,	0X4);
	create_insn	(0X6B38);
	set_name	(0X6B38,	"AnimateObject");
	create_insn	(0X6B96);
	create_insn	(0X6BA6);
	create_insn	(0X6BBA);
	create_word	(x=0X6BDC);
	op_plain_offset	(x,	0,	0X6BDC);
	op_plain_offset	(x,	128,	0X6BDC);
	set_name	(0X6BDC,	"Map_PSB");
	create_word	(0X6BDE);
	create_word	(0X6BE0);
	create_word	(x=0X6C98);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	set_name	(0X6C98,	"Map_TitleSonic");
	create_word	(x=0X6C9A);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6C9C);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6C9E);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6CA0);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6CA2);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6CA4);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_word	(x=0X6CA6);
	op_plain_offset	(x,	0,	0X6C98);
	op_plain_offset	(x,	128,	0X6C98);
	create_byte	(0X6CA9);
	make_array	(0X6CA9,	0X32);
	create_byte	(0X6CDC);
	make_array	(0X6CDC,	0X4B);
	create_byte	(0X6D28);
	make_array	(0X6D28,	0X55);
	create_byte	(0X6D7E);
	make_array	(0X6D7E,	0X41);
	create_byte	(0X6DC0);
	make_array	(0X6DC0,	0X37);
	create_byte	(0X6DF8);
	make_array	(0X6DF8,	0X5F);
	create_byte	(0X6E58);
	make_array	(0X6E58,	0X69);
	create_byte	(0X6EC2);
	make_array	(0X6EC2,	0X6E);
	create_insn	(0X6F30);
	set_name	(0X6F30,	"ObjBallHog");
	create_word	(x=0X6F3E);
	op_plain_offset	(x,	0,	0X6F3E);
	op_plain_offset	(x,	128,	0X6F3E);
	set_name	(0X6F3E,	"ObjBallHog_Index");
	create_word	(x=0X6F40);
	op_plain_offset	(x,	0,	0X6F3E);
	op_plain_offset	(x,	128,	0X6F3E);
	create_word	(x=0X6F42);
	op_plain_offset	(x,	0,	0X6F3E);
	op_plain_offset	(x,	128,	0X6F3E);
	create_word	(x=0X6F44);
	op_plain_offset	(x,	0,	0X6F3E);
	op_plain_offset	(x,	128,	0X6F3E);
	create_insn	(0X6F46);
	set_name	(0X6F46,	"ObjBallHog_Init");
	create_insn	(x=0X6F52);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X6F94,	"ObjBallHog_Return");
	create_insn	(0X6F96);
	set_name	(0X6F96,	"ObjBallHog_Action");
	create_insn	(x=0X6FA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X6FB2);
	op_plain_offset	(x,	0,	0X6FB2);
	op_plain_offset	(x,	128,	0X6FB2);
	set_name	(0X6FB2,	"ObjBallHog_Index2");
	create_word	(x=0X6FB4);
	op_plain_offset	(x,	0,	0X6FB2);
	op_plain_offset	(x,	128,	0X6FB2);
	create_insn	(0X6FB6);
	create_insn	(0X6FE6);
	create_insn	(0X6FF6);
	set_name	(0X6FF6,	"ObjBallHog_MakeBall");
	set_name	(0X701A,	"ObjBallHog_MakeFail");
	create_insn	(0X701C);
	create_insn	(0X7032);
	create_insn	(0X7056);
	set_name	(0X7056,	"ObjBallHog_Display");
	create_insn	(0X705C);
	set_name	(0X705C,	"ObjBallHog_Delete");
	create_insn	(0X7062);
	set_name	(0X7062,	"ObjBallHogBall");
	create_word	(x=0X7070);
	op_plain_offset	(x,	0,	0X7070);
	op_plain_offset	(x,	128,	0X7070);
	set_name	(0X7070,	"ObjBallHogBall_Index");
	create_word	(x=0X7072);
	op_plain_offset	(x,	0,	0X7070);
	op_plain_offset	(x,	128,	0X7070);
	create_word	(x=0X7074);
	op_plain_offset	(x,	0,	0X7070);
	op_plain_offset	(x,	128,	0X7070);
	create_insn	(0X7076);
	set_name	(0X7076,	"ObjBallHogBall_Init");
	create_insn	(x=0X707A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X70A6,	"ObjBallHogBall_ChkFloor");
	set_name	(0X70C2,	"ObjBallHogBall_Explode");
	create_insn	(0X70D2);
	create_insn	(0X70EE);
	set_name	(0X70EE,	"ObjBallHogBall_Delete");
	create_insn	(0X70F4);
	set_name	(0X70F4,	"ObjBallHogExplosion");
	create_word	(x=0X7102);
	op_plain_offset	(x,	0,	0X7102);
	op_plain_offset	(x,	128,	0X7102);
	set_name	(0X7102,	"ObjBallHogExplosion_Index");
	create_word	(x=0X7104);
	op_plain_offset	(x,	0,	0X7102);
	op_plain_offset	(x,	128,	0X7102);
	create_insn	(x=0X7106);
	op_bin		(x,	0);
	set_name	(0X7106,	"ObjBallHogExplosion_Init");
	create_insn	(x=0X710A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7164,	"ObjEnemyExplode");
	create_word	(x=0X725A);
	op_plain_offset	(x,	0,	0X725A);
	op_plain_offset	(x,	128,	0X725A);
	set_name	(0X725A,	"Map_BallHog");
	create_word	(x=0X725C);
	op_plain_offset	(x,	0,	0X725A);
	op_plain_offset	(x,	128,	0X725A);
	create_word	(x=0X725E);
	op_plain_offset	(x,	0,	0X725A);
	op_plain_offset	(x,	128,	0X725A);
	create_byte	(0X7261);
	make_array	(0X7261,	0X14);
	create_byte	(0X7276);
	make_array	(0X7276,	0XF);
	set_name	(0X731E,	"ObjAnimals");
	set_name	(0X74EE,	"ObjPoints");
	set_name	(0X75AA,	"ObjCrabmeat");
	set_name	(0X7898,	"ObjBuzzBomber");
	set_name	(0X79EC,	"ObjBuzzMissile");
	set_name	(0X7BE0,	"ObjRing");
	create_insn	(0X7EC0);
	set_name	(0X7EC0,	"ObjBigRing");
	create_word	(x=0X7ECE);
	op_plain_offset	(x,	0,	0X7ECE);
	op_plain_offset	(x,	128,	0X7ECE);
	set_name	(0X7ECE,	"ObjBigRing_Index");
	create_word	(x=0X7ED0);
	op_plain_offset	(x,	0,	0X7ECE);
	op_plain_offset	(x,	128,	0X7ECE);
	create_word	(x=0X7ED2);
	op_plain_offset	(x,	0,	0X7ECE);
	op_plain_offset	(x,	128,	0X7ECE);
	create_word	(x=0X7ED4);
	op_plain_offset	(x,	0,	0X7ECE);
	op_plain_offset	(x,	128,	0X7ECE);
	create_insn	(x=0X7ED6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7ED6,	"ObjBigRing_Init");
	set_name	(0X7F12,	"ObjBigRing_Display");
	create_insn	(0X7F3C);
	set_name	(0X7F3C,	"ObjBigRing_Touch");
	set_name	(0X7F4C,	"ObjBigRing_Delete");
	set_name	(0X8046,	"ObjMonitor");
	create_insn	(0X8230);
	set_name	(0X8230,	"ObjPowerups");
	create_word	(x=0X8242);
	op_plain_offset	(x,	0,	0X8242);
	op_plain_offset	(x,	128,	0X8242);
	set_name	(0X8242,	"ObjPowerups_Index");
	create_word	(x=0X8244);
	op_plain_offset	(x,	0,	0X8242);
	op_plain_offset	(x,	128,	0X8242);
	create_word	(x=0X8246);
	op_plain_offset	(x,	0,	0X8242);
	op_plain_offset	(x,	128,	0X8242);
	create_insn	(0X8248);
	set_name	(0X8248,	"ObjPowerups_Init");
	create_insn	(0X829C);
	set_name	(0X829C,	"Powerup_Eggman");
	create_insn	(0X82B2);
	set_name	(0X82B2,	"Powerup_Sonic");
	set_name	(0X82B8,	"AddLife");
	create_insn	(0X82CA);
	set_name	(0X82CA,	"Powerup_Shoes");
	create_insn	(0X82F8);
	set_name	(0X82F8,	"Powerup_Shield");
	create_insn	(0X8314);
	set_name	(0X8314,	"Powerup_Invinc");
	create_insn	(0X8360);
	set_name	(0X8360,	"Powerup_10Rings");
	set_name	(0X8396,	"@PlayRingSound");
	create_insn	(0X83A0);
	set_name	(0X83A0,	"Powerup_S");
	set_name	(0X83A8,	"Powerups_Return");
	create_insn	(0X83AA);
	set_name	(0X83AA,	"Powerups_Delete");
	create_insn	(x=0X8536);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8546);
	create_insn	(0X8560);
	create_dword	(x=0X8580);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8590);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85A0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85B0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85C0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85D0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85E0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X85F0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8600);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8610);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8620);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8630);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8640);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8650);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8660);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8670);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8680);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X8690);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X86A0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X86B0);
	make_array	(x,	0X4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X86F8);
	set_name	(0X86F8,	"ObjectFall");
	create_insn	(0X8726);
	set_name	(0X8726,	"ObjectSpeedtoPosition");
	create_insn	(x=0X874C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X874C,	"DisplayObject");
	create_insn	(0X8788);
	set_name	(0X8788,	"DeleteObject");
	create_insn	(x=0X87A6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X87AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X8826);
	create_insn	(0X8830);
	create_insn	(0X8890);
	create_insn	(0X8898);
	create_insn	(0X88DE);
	create_insn	(0X892C);
	create_insn	(0X8972);
	create_insn	(0X89EE);
	create_insn	(x=0X8B72);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X8B72,	"FindFreeObjectSlot");
	set_name	(0X8BA4,	"ObjChopper");
	set_name	(0X8C5E,	"ObjJaws");
	set_name	(0X8CEE,	"ObjBurrobot");
	create_insn	(0XA2BC);
	create_insn	(x=0XA2D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XA2D6);
	op_plain_offset	(x,	1,	0XFFD000);
	op_plain_offset	(x,	129,	0XFFD000);
	create_insn	(0XA302);
	create_insn	(0XA37C);
	create_insn	(x=0XA390);
	op_plain_offset	(x,	0,	0XFFD000);
	op_plain_offset	(x,	128,	0XFFD000);
	create_insn	(0XA3FA);
	create_insn	(0XA428);
	create_insn	(0XA42E);
	create_insn	(0XA43C);
	create_insn	(0XA44C);
	create_insn	(0XA458);
	create_insn	(0XA472);
	create_insn	(0XA488);
	create_insn	(0XA4C4);
	create_insn	(0XA4C8);
	create_insn	(0XB912);
	set_name	(0XB912,	"MarkObjectGone");
	create_insn	(x=0XB938);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XC22C,	"ObjFireBall");
	set_name	(0XC52A,	"ObjSYZLamp");
	set_name	(0XC6EA,	"ObjSignpost");
	set_name	(0XCBEE,	"ObjMZLavaWall");
	create_insn	(0XD1F4);
	set_name	(0XD1F4,	"ObjSplats");
	create_word	(x=0XD202);
	op_plain_offset	(x,	0,	0XD202);
	op_plain_offset	(x,	128,	0XD202);
	set_name	(0XD202,	"ObjSplats_Index");
	create_word	(x=0XD204);
	op_plain_offset	(x,	0,	0XD202);
	op_plain_offset	(x,	128,	0XD202);
	create_word	(x=0XD206);
	op_plain_offset	(x,	0,	0XD202);
	op_plain_offset	(x,	128,	0XD202);
	create_word	(x=0XD208);
	op_plain_offset	(x,	0,	0XD202);
	op_plain_offset	(x,	128,	0XD202);
	create_insn	(0XD20A);
	set_name	(0XD20A,	"ObjSplats_Init");
	create_insn	(x=0XD20E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XD246);
	set_name	(0XD24A,	"ObjSplats_FaceRight");
	set_name	(0XD268,	"ObjSplats_Move");
	set_name	(0XD274,	"ObjSplats_Bounce");
	create_insn	(0XD2A4);
	set_name	(0XD2A4,	"ObjSplats_Fall");
	set_name	(0XD2AE,	"ObjSplats_Turn");
	create_insn	(0XD2C8);
	create_insn	(0XD2DA);
	set_name	(0XD2DA,	"ObjSplatsandYadrin_ChkWall");
	create_insn	(0XD2FE);
	create_word	(x=0XD30C);
	op_plain_offset	(x,	0,	0XD30C);
	op_plain_offset	(x,	128,	0XD30C);
	set_name	(0XD30C,	"Map_Splats");
	create_word	(x=0XD30E);
	op_plain_offset	(x,	0,	0XD30C);
	op_plain_offset	(x,	128,	0XD30C);
	create_byte	(0XD311);
	make_array	(0XD311,	0XA);
	create_byte	(0XD31C);
	make_array	(0XD31C,	0XA);
	create_insn	(0XD326);
	set_name	(0XD326,	"ObjYadrin");
	create_word	(x=0XD334);
	op_plain_offset	(x,	0,	0XD334);
	op_plain_offset	(x,	128,	0XD334);
	set_name	(0XD334,	"ObjYadrin_Index");
	create_word	(x=0XD336);
	op_plain_offset	(x,	0,	0XD334);
	op_plain_offset	(x,	128,	0XD334);
	create_insn	(x=0XD338);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XD338,	"ObjYadrin_Init");
	set_name	(0XD38A,	"ObjYadrin_Return");
	create_insn	(0XD38C);
	set_name	(0XD38C,	"ObjYadrin_Actions");
	create_insn	(x=0XD39A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0XD3A8);
	op_plain_offset	(x,	0,	0XD3A8);
	op_plain_offset	(x,	128,	0XD3A8);
	set_name	(0XD3A8,	"ObjYadrin_ActionIndex");
	create_word	(x=0XD3AA);
	op_plain_offset	(x,	0,	0XD3A8);
	op_plain_offset	(x,	128,	0XD3A8);
	create_insn	(0XD3AC);
	set_name	(0XD3AC,	"ObjYadrin_Move");
	set_name	(0XD3CE,	"ObjYadrin_Move_Return");
	create_insn	(0XD3D0);
	set_name	(0XD3D0,	"ObjYadrin_Floor");
	create_insn	(0XD3F0);
	set_name	(0XD3F0,	"ObjYadrin_Stop");
	create_word	(x=0XD408);
	op_plain_offset	(x,	0,	0XD408);
	op_plain_offset	(x,	128,	0XD408);
	set_name	(0XD408,	"Anim_Yadrin");
	create_word	(x=0XD40A);
	op_plain_offset	(x,	0,	0XD408);
	op_plain_offset	(x,	128,	0XD408);
	create_byte	(0XD40C);
	make_array	(0XD40C,	0X4);
	create_byte	(0XD410);
	make_array	(0XD410,	0XA);
	set_name	(0XD41A,	"Map_Yadrin");
	create_insn	(0XE810);
	set_name	(0XE810,	"ObjSonic");
	create_word	(x=0XE826);
	op_plain_offset	(x,	0,	0XE826);
	op_plain_offset	(x,	128,	0XE826);
	set_name	(0XE826,	"ObjSonic_Index");
	create_word	(x=0XE828);
	op_plain_offset	(x,	0,	0XE826);
	op_plain_offset	(x,	128,	0XE826);
	create_word	(x=0XE82A);
	op_plain_offset	(x,	0,	0XE826);
	op_plain_offset	(x,	128,	0XE826);
	create_word	(x=0XE82C);
	op_plain_offset	(x,	0,	0XE826);
	op_plain_offset	(x,	128,	0XE826);
	create_word	(x=0XE82E);
	op_plain_offset	(x,	0,	0XE826);
	op_plain_offset	(x,	128,	0XE826);
	create_insn	(0XE830);
	set_name	(0XE830,	"ObjSonic_Init");
	create_insn	(x=0XE840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XE8C8,	"ObjSonic_Modes");
	create_insn	(0XE8D6);
	set_name	(0XE8D6,	"Sonic_Display");
	create_insn	(x=0XE906);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XE950);
	create_insn	(0XE952);
	set_name	(0XE952,	"Sonic_RecordPos");
	create_insn	(x=0XE956);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XEE6E);
	create_insn	(0XEE78);
	create_insn	(0XF04E);
	create_insn	(0XF0E0);
	create_insn	(0XF104);
	create_insn	(0XF11E);
	create_insn	(0XF132);
	create_insn	(0XF160);
	create_insn	(0XF1A4);
	create_insn	(0XF1BC);
	create_insn	(0XF1D6);
	create_insn	(0XF1EA);
	create_insn	(0XF218);
	create_insn	(0XF3E4);
	create_insn	(x=0XF40C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF438);
	create_insn	(0XF448);
	create_insn	(0XF456);
	create_insn	(0XF464);
	create_insn	(0XF480);
	create_insn	(x=0XF492);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0XF492,	"Sonic_Animate");
	create_insn	(0XF4DA);
	create_insn	(0XF4F0);
	create_insn	(0XF500);
	create_insn	(0XF514);
	create_insn	(0XF520);
	create_insn	(x=0XF56A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XF576);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF5A0);
	create_insn	(x=0XF5AC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XF5B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF5E4);
	create_insn	(x=0XF5FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF6EC);
	set_name	(0XF6EC,	"Sonic_LoadDPLCs");
	create_insn	(x=0XF6FC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XF710);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XF728);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XF746);
	set_name	(0XF83A,	"ObjSpecialWarp");
	create_insn	(0XFB4A);
	create_insn	(x=0XFB66);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFBB8);
	create_insn	(0XFBD8);
	create_insn	(0XFBF2);
	create_insn	(0XFC2E);
	create_insn	(0XFC58);
	create_insn	(0XFC6A);
	create_insn	(0XFCA2);
	create_insn	(0XFCD0);
	create_insn	(0XFCD8);
	create_insn	(0XFCE0);
	create_insn	(0XFCEA);
	create_insn	(0XFD72);
	create_insn	(0XFDC4);
	create_insn	(0XFDDA);
	create_insn	(0XFE00);
	create_insn	(0XFE08);
	create_insn	(0XFE0C);
	create_insn	(0XFE12);
	create_insn	(0XFE26);
	create_insn	(x=0XFE6E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFE9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFEC8);
	create_insn	(0XFED4);
	create_insn	(0XFEE8);
	create_insn	(0XFF0C);
	create_insn	(0XFF52);
	create_insn	(0XFF6C);
	create_insn	(0XFF7E);
	create_insn	(x=0XFF9A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0XFFC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0XFFF4);
	create_insn	(0X10000);
	create_insn	(0X10014);
	create_insn	(x=0X10032);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10064);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10090);
	create_insn	(0X1009C);
	create_insn	(0X100B0);
	create_insn	(x=0X100CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10100);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1012C);
	create_insn	(0X10138);
	create_insn	(0X1014C);
	create_insn	(x=0X10160);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1018A);
	create_insn	(0X101BE);
	create_insn	(0X101DC);
	create_insn	(x=0X101EA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10218);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1024A);
	create_insn	(0X10264);
	create_insn	(0X10284);
	create_insn	(x=0X10292);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X102C0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X102EC);
	create_insn	(0X102FC);
	create_insn	(0X1031C);
	create_insn	(x=0X1032A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10358);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1038A);
	create_insn	(0X103A4);
	create_insn	(0X103C4);
	create_insn	(x=0X103D2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1042C);
	create_insn	(0X1043C);
	set_name	(0X1043C,	"nullsub_2");
	create_insn	(0X10548);
	create_insn	(x=0X10562);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10590);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X105E2);
	create_insn	(0X105F0);
	set_name	(0X105F0,	"ObjectHitFloor");
	create_insn	(x=0X10602);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1068C);
	create_insn	(x=0X10698);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X106B2);
	create_insn	(x=0X106BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X106E0);
	create_insn	(x=0X106FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10730);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1081A);
	create_insn	(x=0X1082A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10844);
	create_insn	(x=0X1084C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10872);
	create_insn	(x=0X1087C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X108A8);
	toggle_sign		(x,	0);
	create_insn	(x=0X108BA);
	toggle_sign		(x,	0);
	create_insn	(x=0X10906);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10928);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10960);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X109A6);
	create_insn	(x=0X109AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10A02);
	create_insn	(x=0X10A26);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10A2C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10ACC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10AE2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10AF4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X10AFE);
	create_insn	(x=0X10B70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10B80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10B86);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10B9E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10BA4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10BBE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X10CB8);
	set_name	(0X10CB8,	"ObjSpecialSonic");
	create_insn	(x=0X10CBE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10CC2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X10CC6);
	op_plain_offset	(x,	0,	0X10CC6);
	op_plain_offset	(x,	128,	0X10CC6);
	set_name	(0X10CC6,	"ObjSpecialSonic_Index");
	create_word	(x=0X10CC8);
	op_plain_offset	(x,	0,	0X10CC6);
	op_plain_offset	(x,	128,	0X10CC6);
	create_word	(x=0X10CCA);
	op_plain_offset	(x,	0,	0X10CC6);
	op_plain_offset	(x,	128,	0X10CC6);
	create_word	(x=0X10CCC);
	op_plain_offset	(x,	0,	0X10CC6);
	op_plain_offset	(x,	128,	0X10CC6);
	create_insn	(0X10CCE);
	set_name	(0X10CCE,	"ObjSpecialSonic_Init");
	create_insn	(x=0X10CDE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10D1A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X10D1E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X10D2E);
	op_plain_offset	(x,	0,	0X10D2E);
	op_plain_offset	(x,	128,	0X10D2E);
	set_name	(0X10D2E,	"ObjSpecialSonic_Modes");
	create_word	(x=0X10D30);
	op_plain_offset	(x,	0,	0X10D2E);
	op_plain_offset	(x,	128,	0X10D2E);
	create_insn	(0X10D32);
	set_name	(0X10D32,	"ObjSpecialSonic_OnWall");
	create_insn	(0X10D40);
	set_name	(0X10D40,	"ObjSpecialSonic_InAir");
	set_name	(0X10D48,	"ObjSpecialSonic_Display");
	create_insn	(0X10D94);
	set_name	(0X10D94,	"ObjSpecialSonic_Move");
	create_insn	(0X10DCE);
	create_insn	(0X10E26);
	create_insn	(0X10E2C);
	create_insn	(0X10E4E);
	create_insn	(0X10E5C);
	create_insn	(0X10E7C);
	create_insn	(0X10E8A);
	set_name	(0X10E8A,	"ObjSpecialSonic_Jump");
	create_insn	(0X10ECE);
	create_insn	(0X10EF8);
	create_insn	(0X10F3C);
	create_insn	(0X10F7C);
	set_name	(0X10F7C,	"ObjSpecialSonic_Fall");
	create_insn	(0X10FD6);
	create_insn	(0X10FFA);
	create_insn	(x=0X1100E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11056);
	create_insn	(0X11060);
	create_insn	(0X11078);
	create_insn	(x=0X1107C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X110AE);
	create_insn	(0X110D0);
	create_insn	(0X110DA);
	create_insn	(0X110DE);
	create_insn	(0X110FE);
	create_insn	(0X11176);
	create_insn	(0X11182);
	create_insn	(0X111A2);
	create_insn	(0X111A8);
	create_insn	(0X111C0);
	create_insn	(0X111C2);
	set_name	(0X111C2,	"ObjAnimationTest");
	create_insn	(x=0X111C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X111CC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X111D0);
	op_plain_offset	(x,	0,	0X111D0);
	op_plain_offset	(x,	128,	0X111D0);
	set_name	(0X111D0,	"ObjAniTest_Index");
	create_word	(x=0X111D2);
	op_plain_offset	(x,	0,	0X111D0);
	op_plain_offset	(x,	128,	0X111D0);
	create_word	(x=0X111D4);
	op_plain_offset	(x,	0,	0X111D0);
	op_plain_offset	(x,	128,	0X111D0);
	create_word	(x=0X111D6);
	op_plain_offset	(x,	0,	0X111D0);
	op_plain_offset	(x,	128,	0X111D0);
	create_insn	(0X111D8);
	set_name	(0X111D8,	"ObjAniTest_Init");
	create_insn	(x=0X111E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11202,	"ObjAniTest_Display");
	create_insn	(0X11210);
	set_name	(0X11210,	"ObjAniTest_Control");
	create_insn	(0X11286);
	set_name	(0X11286,	"ObjAniTest_Delete");
	create_insn	(0X1128C);
	create_insn	(x=0X11292);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X112A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X112A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X112A8);
	set_name	(0X112A8,	"AnimArt_Pause");
	create_word	(x=0X112AA);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	set_name	(0X112AA,	"AnimArt_Index");
	create_word	(x=0X112AC);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_word	(x=0X112AE);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_word	(x=0X112B0);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_word	(x=0X112B2);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_word	(x=0X112B4);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_word	(x=0X112B6);
	op_plain_offset	(x,	0,	0X112AA);
	op_plain_offset	(x,	128,	0X112AA);
	create_insn	(0X112B8);
	set_name	(0X112B8,	"AnimArt_GHZ");
	create_insn	(x=0X112C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X112EE);
	set_name	(0X112EE,	"AnimGHZ_Sunflower");
	create_insn	(x=0X112FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11324);
	create_insn	(x=0X1133C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X1134C,	"AnimGHZ_PurpleFlower");
	create_insn	(x=0X1135E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X11372);
	make_array	(0X11372,	0X4);
	set_name	(0X11372,	"AnimGHZ_FrameOrder");
	create_insn	(0X11376);
	set_name	(0X11376,	"AnimArt_MZ");
	create_insn	(x=0X11382);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X113C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X113F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11412);
	set_name	(0X11412,	"AnimMZ_UFO");
	create_insn	(x=0X11420);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11436,	"AnimMZ_Torch");
	create_insn	(x=0X11452);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11480);
	set_name	(0X11480,	"AnimMZ_Return");
	create_insn	(0X11482);
	set_name	(0X11482,	"AnimArt_Null");
	create_insn	(0X11484);
	set_name	(0X11484,	"LoadTiles");
	create_word	(x=0X1149A);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	set_name	(0X1149A,	"AnimMZ_Routines");
	create_word	(x=0X1149C);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X1149E);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114A0);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114A2);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114A4);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114A6);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114A8);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114AA);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114AC);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114AE);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114B0);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114B2);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114B4);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114B6);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_word	(x=0X114B8);
	op_plain_offset	(x,	0,	0X1149A);
	op_plain_offset	(x,	128,	0X1149A);
	create_insn	(0X114BA);
	create_insn	(0X114C6);
	create_insn	(0X114DC);
	create_insn	(0X114EA);
	create_insn	(0X11500);
	create_insn	(0X1150E);
	create_insn	(0X11524);
	create_insn	(0X11532);
	create_insn	(0X11548);
	create_insn	(0X11556);
	create_insn	(0X1156C);
	create_insn	(0X1157A);
	create_insn	(0X11590);
	create_insn	(0X1159E);
	create_insn	(0X115B4);
	create_insn	(0X115C6);
	create_insn	(0X115DC);
	set_name	(0X115DC,	"ObjHUD");
	create_insn	(x=0X115E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X115E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(x=0X115EA);
	op_plain_offset	(x,	0,	0X115EA);
	op_plain_offset	(x,	128,	0X115EA);
	set_name	(0X115EA,	"ObjHUD_Index");
	create_word	(x=0X115EC);
	op_plain_offset	(x,	0,	0X115EA);
	op_plain_offset	(x,	128,	0X115EA);
	create_insn	(0X115EE);
	set_name	(0X115EE,	"ObjHUD_Init");
	create_insn	(x=0X115FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X11618,	"ObjHUD_Display");
	create_word	(x=0X1161E);
	op_plain_offset	(x,	0,	0X1161E);
	op_plain_offset	(x,	128,	0X1161E);
	set_name	(0X1161E,	"Map_HUD");
	create_byte	(0X11621);
	make_array	(0X11621,	0X2D);
	create_insn	(0X1164E);
	create_insn	(x=0X11654);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11658);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X1167A);
	create_insn	(x=0X116C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11746);
	create_insn	(0X117B2);
	create_insn	(x=0X117BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X117C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X117DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X117E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11802);
	create_insn	(0X1181E);
	create_insn	(0X1183E);
	create_insn	(x=0X11840);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11874);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X1187E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11888);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11898);
	create_insn	(x=0X118F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X118FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11908);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11918);
	create_insn	(x=0X11958);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11962);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X11972);
	create_insn	(0X119AC);
	create_insn	(0X119BA);
	create_insn	(x=0X119C6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X119D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X119E4);
	create_insn	(0X11A14);
	create_insn	(0X11E66);
	set_name	(0X11E66,	"DebugMode");
	create_insn	(x=0X11E6C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X11E70);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X11E74);
	create_word	(x=0X1226A);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	set_name	(0X1226A,	"Pattern_Load_Cues");
	create_word	(x=0X1226C);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1226E);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12270);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12272);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12274);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12276);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12278);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1227A);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1227C);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1227E);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12280);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12282);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12284);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12286);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12288);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1228A);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1228C);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1228E);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12290);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12292);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12294);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12296);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X12298);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1229A);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1229C);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(x=0X1229E);
	op_plain_offset	(x,	0,	0X1226A);
	op_plain_offset	(x,	128,	0X1226A);
	create_word	(0X122A0);
	set_name	(0X122A0,	"Main_PLCs");
	create_dword	(x=0X122A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122A6);
	create_dword	(x=0X122A8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122AC);
	create_dword	(x=0X122AE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122B2);
	create_dword	(x=0X122B4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122B8);
	create_dword	(x=0X122BA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122BE);
	create_word	(0X122C0);
	set_name	(0X122C0,	"Main_PLCs2");
	create_dword	(x=0X122C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122C6);
	create_dword	(x=0X122C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122CC);
	create_dword	(x=0X122CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122D2);
	create_word	(0X122D4);
	set_name	(0X122D4,	"Explosion_PLCs");
	create_dword	(x=0X122D6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122DA);
	create_word	(0X122DC);
	set_name	(0X122DC,	"GameOver_PLCs");
	create_dword	(x=0X122DE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122E2);
	create_word	(0X122E4);
	set_name	(0X122E4,	"GHZ_PLCs");
	create_dword	(x=0X122E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122EA);
	create_dword	(x=0X122EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122F0);
	create_dword	(x=0X122F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122F6);
	create_dword	(x=0X122F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X122FC);
	create_dword	(x=0X122FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12302);
	create_dword	(x=0X12304);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12308);
	create_dword	(x=0X1230A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1230E);
	create_dword	(x=0X12310);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12314);
	create_dword	(x=0X12316);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1231A);
	create_dword	(x=0X1231C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12320);
	create_dword	(x=0X12322);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12326);
	create_dword	(x=0X12328);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1232C);
	create_word	(0X1232E);
	set_name	(0X1232E,	"GHZ_PLCs2");
	create_dword	(x=0X12330);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12334);
	create_dword	(x=0X12336);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1233A);
	create_dword	(x=0X1233C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12340);
	create_dword	(x=0X12342);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12346);
	create_dword	(x=0X12348);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1234C);
	create_dword	(x=0X1234E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12352);
	create_word	(0X12354);
	set_name	(0X12354,	"LZ_PLCs");
	create_dword	(x=0X12356);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1235A);
	create_word	(0X1235C);
	set_name	(0X1235C,	"LZ_PLCs2");
	create_dword	(x=0X1235E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12362);
	create_word	(0X12364);
	set_name	(0X12364,	"MZ_PLCs");
	create_dword	(x=0X12366);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1236A);
	create_dword	(x=0X1236C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12370);
	create_dword	(x=0X12372);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12376);
	create_dword	(x=0X12378);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1237C);
	create_dword	(x=0X1237E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12382);
	create_dword	(x=0X12384);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12388);
	create_dword	(x=0X1238A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1238E);
	create_dword	(x=0X12390);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12394);
	create_dword	(x=0X12396);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1239A);
	create_dword	(x=0X1239C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123A0);
	create_word	(0X123A2);
	set_name	(0X123A2,	"MZ_PLCs2");
	create_dword	(x=0X123A4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123A8);
	create_dword	(x=0X123AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123AE);
	create_dword	(x=0X123B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123B4);
	create_dword	(x=0X123B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123BA);
	create_dword	(x=0X123BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123C0);
	create_word	(0X123C2);
	set_name	(0X123C2,	"SLZ_PLCs");
	create_dword	(x=0X123C4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123C8);
	create_dword	(x=0X123CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123CE);
	create_dword	(x=0X123D0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123D4);
	create_dword	(x=0X123D6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123DA);
	create_dword	(x=0X123DC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123E0);
	create_dword	(x=0X123E2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123E6);
	create_dword	(x=0X123E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123EC);
	create_dword	(x=0X123EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123F2);
	create_dword	(x=0X123F4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123F8);
	create_dword	(x=0X123FA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X123FE);
	create_dword	(x=0X12400);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12404);
	create_word	(0X12406);
	set_name	(0X12406,	"SLZ_PLCs2");
	create_dword	(x=0X12408);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1240C);
	create_dword	(x=0X1240E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12412);
	create_dword	(x=0X12414);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12418);
	create_dword	(x=0X1241A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1241E);
	create_word	(0X12420);
	set_name	(0X12420,	"SZ_PLCs");
	create_dword	(x=0X12422);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12426);
	create_dword	(x=0X12428);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1242C);
	create_dword	(x=0X1242E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12432);
	create_dword	(x=0X12434);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12438);
	create_dword	(x=0X1243A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1243E);
	create_word	(0X12440);
	set_name	(0X12440,	"SZ_PLCs2");
	create_dword	(x=0X12442);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12446);
	create_dword	(x=0X12448);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1244C);
	create_dword	(x=0X1244E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12452);
	create_dword	(x=0X12454);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12458);
	create_dword	(x=0X1245A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1245E);
	create_dword	(x=0X12460);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12464);
	create_dword	(x=0X12466);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1246A);
	create_word	(0X1246C);
	set_name	(0X1246C,	"CWZ_PLCs");
	create_dword	(x=0X1246E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12472);
	create_word	(0X12474);
	set_name	(0X12474,	"CWZ_PLCs2");
	create_dword	(x=0X12476);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1247A);
	create_word	(0X1247C);
	set_name	(0X1247C,	"TitleCard_PLCs");
	create_dword	(x=0X1247E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12482);
	create_word	(0X12484);
	set_name	(0X12484,	"Boss_PLCs");
	create_dword	(x=0X12486);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1248A);
	create_dword	(x=0X1248C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12490);
	create_dword	(x=0X12492);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12496);
	create_word	(0X12498);
	set_name	(0X12498,	"EndofAct_PLCs");
	create_dword	(x=0X1249A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1249E);
	create_word	(0X124A0);
	set_name	(0X124A0,	"SSWarp_PLCs");
	create_dword	(x=0X124A2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124A6);
	create_word	(0X124A8);
	set_name	(0X124A8,	"SpecialStage_PLCs");
	create_dword	(x=0X124AA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124AE);
	create_dword	(x=0X124B0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124B4);
	create_dword	(x=0X124B6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124BA);
	create_dword	(x=0X124BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124C0);
	create_dword	(x=0X124C2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124C6);
	create_dword	(x=0X124C8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124CC);
	create_dword	(x=0X124CE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124D2);
	create_dword	(x=0X124D4);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124D8);
	create_dword	(x=0X124DA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124DE);
	create_dword	(x=0X124E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124E4);
	create_dword	(x=0X124E6);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124EA);
	create_dword	(x=0X124EC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124F0);
	create_dword	(x=0X124F2);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124F6);
	create_dword	(x=0X124F8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X124FC);
	create_dword	(x=0X124FE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12502);
	create_dword	(x=0X12504);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12508);
	create_dword	(x=0X1250A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1250E);
	create_dword	(x=0X12510);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12514);
	create_dword	(x=0X12516);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1251A);
	create_word	(0X1251C);
	set_name	(0X1251C,	"GHZAnimal_PLCs");
	create_dword	(x=0X1251E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12522);
	create_dword	(x=0X12524);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12528);
	create_word	(0X1252A);
	set_name	(0X1252A,	"LZAnimal_PLCs");
	create_dword	(x=0X1252C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12530);
	create_dword	(x=0X12532);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12536);
	create_word	(0X12538);
	set_name	(0X12538,	"MZAnimal_PLCs");
	create_dword	(x=0X1253A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1253E);
	create_dword	(x=0X12540);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12544);
	create_word	(0X12546);
	set_name	(0X12546,	"SLZAnimal_PLCs");
	create_dword	(x=0X12548);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1254C);
	create_dword	(x=0X1254E);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12552);
	create_word	(0X12554);
	set_name	(0X12554,	"SZAnimal_PLCs");
	create_dword	(x=0X12556);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1255A);
	create_dword	(x=0X1255C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12560);
	create_word	(0X12562);
	set_name	(0X12562,	"CWZAnimal_PLCs");
	create_dword	(x=0X12564);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X12568);
	create_dword	(x=0X1256A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X1256E);
	create_byte	(0X12570);
	make_array	(0X12570,	0X5A90);
	set_name	(0X1C000,	"Map_Sonic");
	set_name	(0X2656E,	"Nem_Smoke");
	set_name	(0X2680E,	"Nem_Shield");
	set_name	(0X269A4,	"Nem_InvincStars");
	set_name	(0X26C48,	"Nem_SSWarp");
	set_name	(0X27400,	"Nem_FlowerStalk");
	set_name	(0X2744A,	"Nem_SwingPltfrm");
	set_name	(0X27564,	"Nem_GHZBridge");
	set_name	(0X27698,	"Nem_GHZBall");
	set_name	(0X27836,	"Nem_Spikes");
	set_name	(0X27AC6,	"Nem_GHZHelix");
	set_name	(0X27BF2,	"Nem_PurpleRock");
	set_name	(0X27D20,	"Nem_GHZWall1");
	set_name	(0X27DBE,	"Nem_GHZWall2");
	set_name	(0X280B0,	"Nem_MZSwitch");
	set_name	(0X2816E,	"Nem_MZPillar");
	set_name	(0X28E6E,	"Nem_MZPushBlock");
	set_name	(0X2905A,	"Nem_SLZSeesaw");
	set_name	(0X29296,	"Nem_SLZFan");
	set_name	(0X2953C,	"Nem_SLZPylon");
	set_name	(0X29E56,	"Nem_Bumper");
	set_name	(0X2A56A,	"Nem_Crabmeat");
	set_name	(0X2AA58,	"Nem_BuzzBomber");
	set_name	(0X2B6D0,	"Nem_Chopper");
	set_name	(0X2B938,	"Nem_Jaws");
	set_name	(0X2BC04,	"Nem_Roller");
	set_name	(0X2C128,	"Nem_Motobug");
	set_name	(0X2C3B2,	"Nem_Newtron");
	set_name	(0X2C9D0,	"Nem_Yadrin");
	set_name	(0X2CDB8,	"Nem_BatBrain");
	set_name	(0X2D2FC,	"Nem_TitleCard");
	set_name	(0X2D912,	"Nem_HUD");
	set_name	(0X2DA08,	"Nem_HUDLives");
	set_name	(0X2DB0E,	"Nem_Ring");
	set_name	(0X2DC02,	"Nem_Monitors");
	set_name	(0X2E062,	"Nem_Explosion");
	set_name	(0X2E6C8,	"Nem_Points");
	set_name	(0X2E77C,	"Nem_GameOver");
	set_name	(0X2ECDC,	"Nem_HSpring");
	set_name	(0X2EDDE,	"Nem_VSpring");
	set_name	(0X2EEBA,	"Nem_Signpost");
	set_name	(0X2F336,	"Nem_Rabbit");
	set_name	(0X2F48E,	"Nem_Chicken");
	set_name	(0X2F5EA,	"Nem_Penguin");
	set_name	(0X2F766,	"Nem_Seal");
	set_name	(0X2F882,	"Nem_Pig");
	set_name	(0X2F9B8,	"Nem_Flicky");
	set_name	(0X2FAF2,	"Nem_Chipmunk");
	set_name	(0X30C80,	"Nem_GHZ1");
	set_name	(0X322E0,	"Nem_GHZ2");
	set_name	(0X35EF8,	"Nem_LZ");
	set_name	(0X39A14,	"Nem_MZ");
	set_name	(0X46D20,	"Nem_SLZ");
	set_name	(0X4D8F8,	"Nem_SZ");
	set_name	(0X53A04,	"Nem_CWZ");
	set_name	(0X60000,	"Nem_BossMain");
	set_name	(0X60864,	"Nem_BossItems");
	set_name	(0X60BB0,	"Nem_Capsule");
	set_name	(0X63080,	"Nem_SSWalls");
	set_name	(0X63AEC,	"Nem_SSBirdFish");
	set_name	(0X64A7C,	"Nem_SSCloudBubble");
	set_name	(0X64F70,	"Nem_SSGoal");
	set_name	(0X6512E,	"Nem_SSSkull");
	set_name	(0X651FE,	"Nem_SSU");
	set_name	(0X652DE,	"Nem_SS1Up");
	set_name	(0X653D4,	"Nem_SSEmeraldEffect");
	set_name	(0X65432,	"Nem_SSRedWhiteBlock");
	set_name	(0X65982,	"Nem_SSUpDown");
	set_name	(0X6B618,	"Art_GHZPurpleFlower");
	set_name	(0X6BA98,	"Art_MZLavaSurface");
	set_name	(0X6BD98,	"Art_MZLavaBody");
	create_byte	(0X6C398);
	make_array	(0X6C398,	0X600);
	set_name	(0X6C398,	"Art_MZUFOs");
	create_byte	(0X6C998);
	make_array	(0X6C998,	0X300);
	set_name	(0X6C998,	"Art_MZTorch");
	create_dword	(x=0X74000);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X74004);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X74008);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X7400C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X74014);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(x=0X74020);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X741D2);
	create_insn	(0X74202);
	create_insn	(x=0X74208);
	op_plain_offset	(x,	0,	0XFFF000);
	op_plain_offset	(x,	128,	0XFFF000);
	create_insn	(0X742C2);
	create_insn	(0X742E2);
	create_insn	(0X742F8);
	create_insn	(0X74328);
	create_insn	(x=0X7432C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_byte	(0X74348);
	create_insn	(0X74350);
	create_insn	(0X7436A);
	create_insn	(0X74376);
	create_insn	(0X7438E);
	create_insn	(0X743A4);
	create_insn	(0X743AC);
	create_insn	(x=0X743BC);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X743CA);
	create_insn	(0X743D8);
	create_insn	(0X743E2);
	create_insn	(0X743EA);
	create_insn	(0X74428);
	create_insn	(0X74448);
	create_insn	(0X74450);
	create_insn	(0X74464);
	create_insn	(0X7446C);
	create_insn	(0X74488);
	create_insn	(0X744A2);
	create_insn	(0X744E2);
	create_insn	(x=0X744E8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74518);
	create_insn	(x=0X74526);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X7452A);
	create_insn	(0X745C6);
	create_insn	(0X7460A);
	create_insn	(0X74678);
	create_insn	(0X746FE);
	create_insn	(x=0X74704);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X74708);
	create_insn	(x=0X7471C);
	toggle_sign		(x,	0);
	create_insn	(0X74730);
	create_insn	(0X7477E);
	create_insn	(x=0X747EE);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74832);
	create_insn	(x=0X7487C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X748C8);
	create_insn	(x=0X748CA);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74920);
	create_insn	(x=0X74984);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74992);
	create_insn	(x=0X74994);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X749B8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_dword	(0X74A0C);
	create_dword	(0X74A2C);
	create_insn	(0X74A4C);
	create_insn	(0X74A8A);
	create_insn	(0X74C3C);
	create_insn	(0X74C48);
	create_insn	(0X74C6C);
	create_insn	(0X74C90);
	create_insn	(0X74CCA);
	create_insn	(0X74CFE);
	create_insn	(0X74D2A);
	create_insn	(0X74D60);
	create_insn	(0X74DB6);
	create_insn	(0X74DC2);
	create_insn	(0X74E04);
	create_insn	(0X74E10);
	create_insn	(0X74E2A);
	create_insn	(0X74E2C);
	create_insn	(0X74E42);
	create_insn	(0X74E50);
	create_insn	(x=0X74E5C);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74E76);
	create_insn	(x=0X74E80);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74F5C);
	create_insn	(0X74F72);
	create_insn	(0X74F84);
	create_insn	(0X74F9C);
	create_insn	(0X74FB0);
	create_insn	(0X74FB8);
	create_insn	(x=0X74FC8);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X74FD6);
	create_insn	(0X74FE8);
	create_insn	(0X74FEE);
	create_insn	(0X7502C);
	create_insn	(0X75032);
	create_insn	(0X75082);
	create_insn	(0X750A4);
	create_insn	(0X750B2);
	create_insn	(0X750B8);
	create_insn	(0X750C2);
	create_insn	(0X750CA);
	create_insn	(x=0X750E0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(0X75184);
	create_insn	(x=0X7518A);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_word	(0X7518E);
	create_byte	(0X75456);
	create_insn	(0X7545E);
	create_insn	(x=0X75494);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	create_insn	(x=0X754A0);
	op_plain_offset	(x,	0,	0);
	op_plain_offset	(x,	128,	0);
	set_name	(0X7FFFF,	"EndofROM");
}

static Functions_0(void) {

	add_func    (0X482,0X4CC);
	set_func_flags(0X482,0x1000);
	set_name(0X49C, "LoadErrorGraphics", SN_LOCAL);
	set_name(0X4BC, "ErrorLetterLoop", SN_LOCAL);
	add_func    (0X5B4,0X5C4);
	set_func_flags(0X5B4,0x1000);
	add_func    (0X5C4,0X5DA);
	set_func_flags(0X5C4,0x1000);
	add_func    (0X5DA,0X5EA);
	set_func_flags(0X5DA,0x1000);
	add_func    (0XF80,0XFB0);
	set_func_flags(0XF80,0x1000);
	add_func    (0XFB0,0XFDC);
	set_func_flags(0XFB0,0x1000);
	add_func    (0XFDC,0X100A);
	set_func_flags(0XFDC,0x1000);
	add_func    (0X100A,0X1080);
	set_func_flags(0X100A,0x1000);
	add_func    (0X10A6,0X1134);
	set_func_flags(0X10A6,0x1000);
	add_func    (0X1134,0X119C);
	set_func_flags(0X1134,0x1000);
	add_func    (0X11A4,0X11AA);
	set_func_flags(0X11A4,0x1000);
	add_func    (0X11AA,0X11B0);
	set_func_flags(0X11AA,0x1000);
	add_func    (0X11B6,0X120E);
	set_func_flags(0X11B6,0x1000);
	set_name(0X11CC, "EnablePauseState", SN_LOCAL);
	set_name(0X1206, "Unpause", SN_LOCAL);
	set_name(0X120C, "Pause_Return", SN_LOCAL);
	add_func    (0X1216,0X1236);
	set_func_flags(0X1216,0x1000);
	add_func    (0X1236,0X1280);
	set_func_flags(0X1236,0x1000);
	add_func    (0X1280,0X12F8);
	set_func_flags(0X1280,0x1000);
	add_func    (0X12F8,0X1302);
	set_func_flags(0X12F8,0x1000);
	add_func    (0X1324,0X1376);
	set_func_flags(0X1324,0x1000);
	add_func    (0X1376,0X13A8);
	set_func_flags(0X1376,0x1000);
	add_func    (0X13A8,0X13D4);
	set_func_flags(0X13A8,0x1000);
	add_func    (0X13D4,0X13E2);
	set_func_flags(0X13D4,0x1000);
	add_func    (0X13E2,0X1438);
	set_func_flags(0X13E2,0x1000);
	add_func    (0X14E2,0X1514);
	set_func_flags(0X14E2,0x1000);
	add_func    (0X1514,0X155E);
	set_func_flags(0X1514,0x1000);
	add_func    (0X1682,0X1692);
	set_func_flags(0X1682,0x1000);
	add_func    (0X1692,0X1732);
	set_func_flags(0X1692,0x1000);
	set_frame_size(0X1692, 0X2, 0, 0);
	add_func    (0X1732,0X1744);
	set_func_flags(0X1732,0x1000);
	add_func    (0X1752,0X1788);
	set_func_flags(0X1752,0x1000);
	add_func    (0X1950,0X1988);
	set_func_flags(0X1950,0x1000);
	add_func    (0X1988,0X19A6);
	set_func_flags(0X1988,0x1000);
	add_func    (0X19A6,0X19D2);
	set_func_flags(0X19A6,0x1000);
	add_func    (0X19D2,0X19F2);
	set_func_flags(0X19D2,0x1000);
	add_func    (0X19F2,0X1A0A);
	set_func_flags(0X19F2,0x1000);
	add_func    (0X1A0A,0X1A3A);
	set_func_flags(0X1A0A,0x1000);
	add_func    (0X1A3A,0X1A6A);
	set_func_flags(0X1A3A,0x1000);
	set_frame_size(0X1A3A, 0X1, 0, 0);
	add_func    (0X1AA8,0X1AC4);
	set_func_flags(0X1AA8,0x1000);
	add_func    (0X1AC4,0X1ADC);
	set_func_flags(0X1AC4,0x1000);
	add_func    (0X201C,0X2028);
	set_func_flags(0X201C,0x1000);
	add_func    (0X204E,0X2066);
	set_func_flags(0X204E,0x1000);
	add_func    (0X231C,0X2382);
	set_func_flags(0X231C,0x1000);
	add_func    (0X28A6,0X292C);
	set_func_flags(0X28A6,0x1000);
	add_func    (0X292C,0X29B8);
	set_func_flags(0X292C,0x1000);
	add_func    (0X29B8,0X29CC);
	set_func_flags(0X29B8,0x1000);
	add_func    (0X29CC,0X29E8);
	set_func_flags(0X29CC,0x1000);
	add_func    (0X3048,0X3078);
	set_func_flags(0X3048,0x1000);
	add_func    (0X3078,0X3100);
	set_func_flags(0X3078,0x1000);
	add_func    (0X31EE,0X3230);
	set_func_flags(0X31EE,0x1000);
	add_func    (0X3300,0X3302);
	set_func_flags(0X3300,0x1040);
	add_func    (0X3360,0X3374);
	set_func_flags(0X3360,0x1000);
	add_func    (0X33B6,0X340E);
	set_func_flags(0X33B6,0x1000);
	add_func    (0X344E,0X34BC);
	set_func_flags(0X344E,0x1000);
	set_frame_size(0X344E, 0X1, 0, 0);
	add_func    (0X34BC,0X34FC);
	set_func_flags(0X34BC,0x1000);
	add_func    (0X366A,0X3730);
	set_func_flags(0X366A,0x1000);
	add_func    (0X3730,0X380A);
	set_func_flags(0X3730,0x1000);
	add_func    (0X39B2,0X3A86);
	set_func_flags(0X39B2,0x1000);
	add_func    (0X3AAE,0X3D6A);
	set_func_flags(0X3AAE,0x1000);
	add_func    (0X3D9A,0X3DC0);
	set_func_flags(0X3D9A,0x1000);
	add_func    (0X3DF6,0X3E4C);
	set_func_flags(0X3DF6,0x1000);
	add_func    (0X40B4,0X40E8);
	set_func_flags(0X40B4,0x1000);
	add_func    (0X40E8,0X413C);
	set_func_flags(0X40E8,0x1000);
	add_func    (0X414C,0X4258);
	set_func_flags(0X414C,0x1000);
	add_func    (0X460A,0X4634);
	set_func_flags(0X460A,0x1000);
	add_func    (0X4662,0X46E0);
	set_func_flags(0X4662,0x1000);
	add_func    (0X4706,0X4752);
	set_func_flags(0X4706,0x1000);
	add_func    (0X4752,0X476E);
	set_func_flags(0X4752,0x1000);
	add_func    (0X478A,0X47B0);
	set_func_flags(0X478A,0x1000);
	add_func    (0X47B0,0X47D8);
	set_func_flags(0X47B0,0x1000);
	add_func    (0X480A,0X485C);
	set_func_flags(0X480A,0x1000);
	add_func    (0X48BA,0X48DA);
	set_func_flags(0X48BA,0x1000);
	add_func    (0X48DA,0X4914);
	set_func_flags(0X48DA,0x1000);
	add_func    (0X4914,0X495E);
	set_func_flags(0X4914,0x1000);
	add_func    (0X4BEC,0X4BF2);
	set_func_flags(0X4BEC,0x1000);
	add_func    (0X4FD4,0X504A);
	set_func_flags(0X4FD4,0x1000);
	add_func    (0X560E,0X563C);
	set_func_flags(0X560E,0x1000);
	add_func    (0X5CEE,0X5D2C);
	set_func_flags(0X5CEE,0x1000);
	add_func    (0X5DC8,0X5E2A);
	set_func_flags(0X5DC8,0x1000);
	add_func    (0X5E50,0X5E7A);
	set_func_flags(0X5E50,0x1000);
	add_func    (0X683C,0X6878);
	set_func_flags(0X683C,0x1000);
	add_func    (0X6936,0X69CE);
	set_func_flags(0X6936,0x1000);
	add_func    (0X69CE,0X6A2C);
	set_func_flags(0X69CE,0x1000);
	add_func    (0X6B38,0X6BDC);
	set_func_flags(0X6B38,0x1000);
	add_func    (0X8536,0X8546);
	set_func_flags(0X8536,0x1000);
	add_func    (0X8546,0X8560);
	set_func_flags(0X8546,0x1000);
	add_func    (0X86F8,0X8726);
	set_func_flags(0X86F8,0x1000);
	add_func    (0X8726,0X874C);
	set_func_flags(0X8726,0x1000);
	add_func    (0X874C,0X876A);
	set_func_flags(0X874C,0x1000);
	add_func    (0X8788,0X8796);
	set_func_flags(0X8788,0x1000);
	add_func    (0X87A6,0X8898);
	set_func_flags(0X87A6,0x1000);
	add_func    (0X8898,0X89C6);
	set_func_flags(0X8898,0x1000);
	add_func    (0X89EE,0X89FC);
	set_func_flags(0X89EE,0x1000);
	add_func    (0X8B72,0X8B88);
	set_func_flags(0X8B72,0x1000);
	add_func    (0XA2BC,0XA43C);
	set_func_flags(0XA2BC,0x1000);
	add_func    (0XA43C,0XA44C);
	set_func_flags(0XA43C,0x1000);
	add_func    (0XA4C8,0XA4D6);
	set_func_flags(0XA4C8,0x1000);
	add_func    (0XD2DA,0XD30C);
	set_func_flags(0XD2DA,0x1000);
	add_func    (0XE8D6,0XE952);
	set_func_flags(0XE8D6,0x1000);
	add_func    (0XE952,0XE96C);
	set_func_flags(0XE952,0x1000);
	add_func    (0XF04E,0XF218);
	set_func_flags(0XF04E,0x1000);
	add_func    (0XF218,0XF26A);
	set_func_flags(0XF218,0x1000);
	add_func    (0XF3E4,0XF492);
	set_func_flags(0XF3E4,0x1000);
	add_func    (0XF492,0XF4DA);
	set_func_flags(0XF492,0x1000);
	add_func    (0XF4DA,0XF520);
	set_func_flags(0XF4DA,0x1000);
	add_func    (0XF6EC,0XF746);
	set_func_flags(0XF6EC,0x1000);
	add_func    (0XF746,0XF754);
	set_func_flags(0XF746,0x1000);
	add_func    (0XFB4A,0XFE12);
	set_func_flags(0XFB4A,0x1000);
	add_func    (0XFE12,0XFEEA);
	set_func_flags(0XFE12,0x1000);
	add_func    (0XFF52,0XFF7E);
	set_func_flags(0XFF52,0x1000);
	add_func    (0X1014C,0X101BE);
	set_func_flags(0X1014C,0x1000);
	add_func    (0X101BE,0X10264);
	set_func_flags(0X101BE,0x1000);
	add_func    (0X10264,0X102FC);
	set_func_flags(0X10264,0x1000);
	add_func    (0X102FC,0X103A4);
	set_func_flags(0X102FC,0x1000);
	add_func    (0X103A4,0X1043C);
	set_func_flags(0X103A4,0x1000);
	add_func    (0X1043C,0X1043E);
	set_func_flags(0X1043C,0x1040);
	add_func    (0X10548,0X105C0);
	set_func_flags(0X10548,0x1000);
	add_func    (0X105F0,0X10628);
	set_func_flags(0X105F0,0x1000);
	add_func    (0X1068C,0X106B2);
	set_func_flags(0X1068C,0x1000);
	add_func    (0X106B2,0X106E0);
	set_func_flags(0X106B2,0x1000);
	add_func    (0X106E0,0X1074C);
	set_func_flags(0X106E0,0x1000);
	add_func    (0X1081A,0X10844);
	set_func_flags(0X1081A,0x1000);
	add_func    (0X10844,0X10872);
	set_func_flags(0X10844,0x1000);
	add_func    (0X10872,0X109AE);
	set_func_flags(0X10872,0x1000);
	add_func    (0X109AE,0X10A8C);
	set_func_flags(0X109AE,0x1000);
	add_func    (0X10ACC,0X10AE2);
	set_func_flags(0X10ACC,0x1000);
	add_func    (0X10B70,0X10BD0);
	set_func_flags(0X10B70,0x1000);
	add_func    (0X10D94,0X10E2C);
	set_func_flags(0X10D94,0x1000);
	set_name(0X10DA0, "ObjSpecialSonic_CheckRight", SN_LOCAL);
	add_func    (0X10E2C,0X10E5C);
	set_func_flags(0X10E2C,0x1000);
	add_func    (0X10E5C,0X10E8A);
	set_func_flags(0X10E5C,0x1000);
	add_func    (0X10E8A,0X10ECE);
	set_func_flags(0X10E8A,0x1000);
	set_name(0X10ECC, "ObjSpecialSonic_Jump_Return", SN_LOCAL);
	add_func    (0X10ECE,0X10EF8);
	set_func_flags(0X10ECE,0x1000);
	add_func    (0X10F7C,0X1100E);
	set_func_flags(0X10F7C,0x1000);
	add_func    (0X1100E,0X11056);
	set_func_flags(0X1100E,0x1000);
	add_func    (0X11056,0X1107C);
	set_func_flags(0X11056,0x1000);
	add_func    (0X1107C,0X110DE);
	set_func_flags(0X1107C,0x1000);
	add_func    (0X110DE,0X111C2);
	set_func_flags(0X110DE,0x1000);
	add_func    (0X11210,0X11286);
	set_func_flags(0X11210,0x1000);
	set_name(0X11226, "ObjAniTest_ChkDown", SN_LOCAL);
	set_name(0X1122E, "ObjAniTest_ChkLeft", SN_LOCAL);
	set_name(0X11236, "ObjAniTest_ChkRight", SN_LOCAL);
	set_name(0X1123E, "ObjAniTest_ChkB", SN_LOCAL);
	set_name(0X11264, "ObjAniTest_ChkC", SN_LOCAL);
	set_name(0X1127E, "ObjAniTest_Animate", SN_LOCAL);
	add_func    (0X11484,0X1149A);
	set_func_flags(0X11484,0x1000);
	add_func    (0X1164E,0X1167A);
	set_func_flags(0X1164E,0x1000);
	add_func    (0X117B2,0X117C6);
	set_func_flags(0X117B2,0x1000);
	add_func    (0X117C6,0X1180E);
	set_func_flags(0X117C6,0x1000);
	add_func    (0X1181E,0X1183E);
	set_func_flags(0X1181E,0x1000);
	add_func    (0X1183E,0X11874);
	set_func_flags(0X1183E,0x1000);
	add_func    (0X11874,0X1187E);
	set_func_flags(0X11874,0x1000);
	add_func    (0X1187E,0X118DC);
	set_func_flags(0X1187E,0x1000);
	add_func    (0X118F4,0X118FE);
	set_func_flags(0X118F4,0x1000);
	add_func    (0X118FE,0X11958);
	set_func_flags(0X118FE,0x1000);
	add_func    (0X11958,0X119BA);
	set_func_flags(0X11958,0x1000);
	add_func    (0X119BA,0X11A26);
	set_func_flags(0X119BA,0x1000);
	add_func    (0X741D2,0X742C2);
	set_func_flags(0X741D2,0x1000);
	add_func    (0X742C2,0X74348);
	set_func_flags(0X742C2,0x1000);
	set_frame_size(0X742C2, 0X1, 0, 0);
	add_func    (0X74350,0X74376);
	set_func_flags(0X74350,0x1000);
	set_frame_size(0X74350, 0X1, 0, 0);
	add_func    (0X74376,0X743AC);
	set_func_flags(0X74376,0x1000);
	add_func    (0X743AC,0X743CA);
	set_func_flags(0X743AC,0x1000);
	add_func    (0X743CA,0X743E2);
	set_func_flags(0X743CA,0x1000);
	add_func    (0X743EA,0X74428);
	set_func_flags(0X743EA,0x1000);
	add_func    (0X74428,0X74450);
	set_func_flags(0X74428,0x1000);
	add_func    (0X74450,0X744A2);
	set_func_flags(0X74450,0x1000);
	add_func    (0X744A2,0X74510);
	set_func_flags(0X744A2,0x1000);
	add_func    (0X74678,0X74AF8);
	set_func_flags(0X74678,0x1000);
	add_func    (0X74C3C,0X74CA2);
	set_func_flags(0X74C3C,0);
	add_func    (0X74CCA,0X74CFE);
	set_func_flags(0X74CCA,0x1000);
	add_func    (0X74D2A,0X74D60);
	set_func_flags(0X74D2A,0x1000);
	add_func    (0X74D60,0X74D90);
	set_func_flags(0X74D60,0x1000);
	add_func    (0X74DB6,0X74E10);
	set_func_flags(0X74DB6,0x1000);
	add_func    (0X74E2C,0X74E44);
	set_func_flags(0X74E2C,0x1000);
	add_func    (0X74E50,0X74E5C);
	set_func_flags(0X74E50,0x1000);
	add_func    (0X74E5C,0X74E76);
	set_func_flags(0X74E5C,0x1000);
	add_func    (0X74E80,0X74E9C);
	set_func_flags(0X74E80,0x1000);
	add_func    (0X74F5C,0X74F84);
	set_func_flags(0X74F5C,0x1000);
	set_frame_size(0X74F5C, 0X1, 0, 0);
	add_func    (0X74F84,0X74FB8);
	set_func_flags(0X74F84,0x1000);
	add_func    (0X74FB8,0X74FE8);
	set_func_flags(0X74FB8,0x1000);
	add_func    (0X74FE8,0X74FEE);
	set_func_flags(0X74FE8,0x1000);
	add_func    (0X74FEE,0X7502C);
	set_func_flags(0X74FEE,0x1000);
	add_func    (0X75032,0X75082);
	set_func_flags(0X75032,0x1000);
	add_func    (0X75082,0X750B2);
	set_func_flags(0X75082,0x1000);
	add_func    (0X750CA,0X750E0);
	set_func_flags(0X750CA,0x1000);
	add_func    (0X750E0,0X750F8);
	set_func_flags(0X750E0,0x1000);
	add_func    (0X75184,0X7518E);
	set_func_flags(0X75184,0x1000);
	set_frame_size(0X75184, 0XE0, 0, 0);
	add_func    (0X7545E,0X754C2);
	set_func_flags(0X7545E,0x1000);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
}

//------------------------------------------------------------------------
// Information about all patched bytes:

static Patches(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
        end_type_updating(UTP_STRUCT);
}

// End of file.
